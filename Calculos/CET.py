def calcular_tir(fluxo_de_caixa, guess=0.1, max_iteracoes=1000, precisao=0.00001):
    tir = guess
    n = len(fluxo_de_caixa)
    
    for _ in range(max_iteracoes):
        vpl = 0
        derivada_vpl = 0
        
        # Calcula o VPL e a derivada do VPL
        for j in range(n):
            valor = fluxo_de_caixa[j]
            vpl += valor / (1 + tir) ** j
            derivada_vpl -= j * valor / (1 + tir) ** (j + 1)
        
        if derivada_vpl == 0:
            return None  # Evita divisão por zero
        
        delta = vpl / derivada_vpl
        tir -= delta
        
        if abs(delta) < precisao:
            return tir  # Retorna a TIR encontrada
    
    return None  # Não convergiu

valor_inicial = -117830.69					


# Valor inicial desembolsado (negativo no fluxo de caixa)
carencia = [0.00, 0.00]
parcelas = [2124.276278,2116.733102,2109.189925,2101.646749,2094.103573,2086.560397,2079.01722,2071.474044,2063.930868,2056.387692,2048.844515,2041.301339,2033.758163,2026.214987,2018.67181,2011.128634,2003.585458,1996.042282,1988.499106,1980.955929,1973.412753,1965.869577,1958.326401,1950.783224,1943.240048,1935.696872,1928.153696,1920.610519,1913.067343,1905.524167,1897.980991,1890.437814,1882.894638,1875.351462,1867.808286,1860.265109,1852.721933,1845.178757,1837.635581,1830.092404,1822.549228,1815.006052,1807.462876,1799.9197,1792.376523,1784.833347,1777.290171,1769.746995,1762.203818,1754.660642,1747.117466,1739.57429,1732.031113,1724.487937,1716.944761,1709.401585,1701.858408,1694.315232,1686.772056,1679.22888,1671.685703,1664.142527,1656.599351,1649.056175,1641.512998,1633.969822,1626.426646,1618.88347,1611.340294,1603.797117,1596.253941,1588.710765,1581.167589,1573.624412,1566.081236,1558.53806,1550.994884,1543.451707,1535.908531,1528.365355,1520.822179,1513.279002,1505.735826,1498.19265,1490.649474,1483.106297,1475.563121,1468.019945,1460.476769,1452.933592,1445.390416,1437.84724,1430.304064,1422.760888,1415.217711,1407.674535,1400.131359,1392.588183,1385.045006,1377.50183,1369.958654,1362.415478,1354.872301,1347.329125,1339.785949,1332.242773,1324.699596,1317.15642,1309.613244,1302.070068,1294.526891,1286.983715,1279.440539,1271.897363,1264.354186,1256.81101,1249.267834,1241.724658,1234.181482,1226.638305,1219.095129,1211.551953,1204.008777,1196.4656,1188.922424,1181.379248,1173.836072,1166.292895,1158.749719,1151.206543,1143.663367,1136.12019,1128.577014,1121.033838,1113.490662,1105.947485,1098.404309,1090.861133,1083.317957,1075.77478,1068.231604,1060.688428,1053.145252,1045.602076,1038.058899,1030.515723,1022.972547,1015.429371,1007.886194,1000.343018,992.7998418,985.2566656,977.7134894,970.1703131,962.6271369,955.0839606,947.5407844,939.9976082,932.4544319,924.9112557,917.3680794,909.8249032,902.281727,894.7385507,887.1953745,879.6521982,872.109022,864.5658458,857.0226695,849.4794933,841.9363171,834.3931408,826.8499646,819.3067883,811.7636121,804.2204359,796.6772596,789.1340834,781.5909071,774.0477309]

# parcelas = [1672.38, 
# 1672.31,
# 1672.23,
# 1672.15,
# 1672.07,
# 1671.99,
# 1671.91,
# 1671.83,
# 1671.75,
# 1671.67,
# 1671.58,
# 1671.50,
# 1671.41,
# 1671.33,
# 1671.24,
# 1671.15,
# 1671.06,
# 1670.97,
# 1670.88,
# 1670.78,
# 1670.69,
# 1670.60,
# 1670.50,
# 1670.40,
# 1670.30,
# 1670.21,
# 1670.11,
# 1670.00,
# 1669.90,
# 1669.80,
# 1669.69,
# 1669.59,
# 1669.48,
# 1669.37,
# 1669.27,
# 1669.15,
# 1669.04,
# 1668.93,
# 1668.82,
# 1668.70,
# 1668.59,
# 1668.47,
# 1668.35,
# 1668.23,
# 1668.11,
# 1667.98,
# 1667.86,
# 1667.73,
# 1667.61,
# 1667.48,
# 1667.35,
# 1667.22,
# 1667.08,
# 1666.95,
# 1666.82,
# 1666.68,
# 1666.54,
# 1666.40,
# 1666.26,
# 1666.12,
# 1665.97,
# 1665.82,
# 1665.68,
# 1665.53,
# 1665.38,
# 1665.22,
# 1665.07,
# 1664.91,
# 1664.76,
# 1664.60,
# 1664.43,
# 1664.27,
# 1664.11,
# 1663.94,
# 1663.77,
# 1663.60,
# 1663.43,
# 1663.26,
# 1663.08,
# 1662.90,
# 1662.72,
# 1662.54,
# 1662.36,
# 1662.17,
# 1661.98,
# 1661.80,
# 1661.60,
# 1661.41,
# 1661.21,
# 1661.02,
# 1660.82,
# 1660.61,
# 1660.41,
# 1660.20,
# 1659.99,
# 1659.78,
# 1659.57,
# 1659.35,
# 1659.13,
# 1658.91,
# 1658.69,
# 1658.46,
# 1658.24,
# 1658.01,
# 1657.77,
# 1657.54,
# 1657.30,
# 1657.06,
# 1656.81,
# 1656.57,
# 1656.32,
# 1656.07,
# 1655.81,
# 1655.56,
# 1655.30,
# 1655.04,
# 1654.77,
# 1654.50,
# 1654.23,
# 1653.96,
# 1653.68,
# 1653.40,
# 1653.12,
# 1652.83,
# 1652.54,
# 1652.25,
# 1651.95,
# 1651.65,
# 1651.35,
# 1651.04,
# 1650.74,
# 1650.42,
# 1650.11,
# 1649.79,
# 1649.47,
# 1649.14,
# 1648.81,
# 1648.48,
# 1648.14,
# 1647.80,
# 1647.46,
# 1647.11,
# 1646.76,
# 1646.40,
# 1646.04,
# 1645.68,
# 1645.31,
# 1644.94,
# 1644.56,
# 1644.18,
# 1643.80,
# 1643.41,
# 1643.02,
# 1642.62,
# 1642.22,
# 1641.82,
# 1641.41,
# 1640.99,
# 1640.58,
# 1640.15,
# 1639.72,
# 1639.29,
# 1638.86,
# 1638.41,
# 1637.97,
# 1637.52,
# 1637.06,
# 1636.60,
# 1636.13,
# 1635.66,
# 1635.18,
# 1634.70,
# 1634.21,
# 1633.72,
# 1633.22,
# 1632.72,
# 1632.21,
# 1631.70,
# 1631.18,
# 1630.65
# ]

fluxo_de_caixa = [valor_inicial] + carencia + parcelas # Realizo a "concatenação" do meu array, levando em consideração o array de carência, onde caso 

tir_mensal = calcular_tir(fluxo_de_caixa, guess=0.1)

if tir_mensal is not None:
    cet_anual = (1 + tir_mensal) ** 12 - 1
    print(f"TIR Mensal (CET): {tir_mensal * 100:.2f}%")
    print(f"CET Anual: {cet_anual * 100:.2f}%")
else:
    print("O cálculo da TIR não convergiu.")
